// Mocks generated by Mockito 5.4.6 from annotations
// in picklematch/test/bloc/auth_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:picklematch/models/game.dart' as _i3;
import 'package:picklematch/models/location.dart' as _i6;
import 'package:picklematch/models/player.dart' as _i7;
import 'package:picklematch/models/user.dart' as _i2;
import 'package:picklematch/services/api_service.dart' as _i4;
import 'package:picklematch/services/storage_service.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGame_1 extends _i1.SmartFake implements _i3.Game {
  _FakeGame_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i4.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.User?> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i5.Stream<_i2.User?>.empty(),
          )
          as _i5.Stream<_i2.User?>);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.User> login(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#login, [email, password]),
            returnValue: _i5.Future<_i2.User>.value(
              _FakeUser_0(this, Invocation.method(#login, [email, password])),
            ),
          )
          as _i5.Future<_i2.User>);

  @override
  _i5.Future<void> logout(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#logout, [token]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.User> register(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#register, [email, password]),
            returnValue: _i5.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#register, [email, password]),
              ),
            ),
          )
          as _i5.Future<_i2.User>);

  @override
  _i5.Future<List<_i3.Game>> getGames(
    String? token, {
    String? date,
    String? locationId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getGames,
              [token],
              {#date: date, #locationId: locationId},
            ),
            returnValue: _i5.Future<List<_i3.Game>>.value(<_i3.Game>[]),
          )
          as _i5.Future<List<_i3.Game>>);

  @override
  _i5.Future<_i3.Game> createGame(String? token, _i3.Game? game) =>
      (super.noSuchMethod(
            Invocation.method(#createGame, [token, game]),
            returnValue: _i5.Future<_i3.Game>.value(
              _FakeGame_1(this, Invocation.method(#createGame, [token, game])),
            ),
          )
          as _i5.Future<_i3.Game>);

  @override
  _i5.Future<_i3.Game> updateGameResult(
    String? token,
    String? gameId,
    int? team1Score1,
    int? team1Score2,
    int? team2Score1,
    int? team2Score2,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateGameResult, [
              token,
              gameId,
              team1Score1,
              team1Score2,
              team2Score1,
              team2Score2,
            ]),
            returnValue: _i5.Future<_i3.Game>.value(
              _FakeGame_1(
                this,
                Invocation.method(#updateGameResult, [
                  token,
                  gameId,
                  team1Score1,
                  team1Score2,
                  team2Score1,
                  team2Score2,
                ]),
              ),
            ),
          )
          as _i5.Future<_i3.Game>);

  @override
  _i5.Future<_i3.Game> joinGame(String? token, String? gameId, String? team) =>
      (super.noSuchMethod(
            Invocation.method(#joinGame, [token, gameId, team]),
            returnValue: _i5.Future<_i3.Game>.value(
              _FakeGame_1(
                this,
                Invocation.method(#joinGame, [token, gameId, team]),
              ),
            ),
          )
          as _i5.Future<_i3.Game>);

  @override
  _i5.Future<void> deleteGame(String? token, String? gameId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGame, [token, gameId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i6.Location>> getLocations(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getLocations, [token]),
            returnValue: _i5.Future<List<_i6.Location>>.value(<_i6.Location>[]),
          )
          as _i5.Future<List<_i6.Location>>);

  @override
  _i5.Future<Map<String, _i7.Player>> getPlayers(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getPlayers, [token]),
            returnValue: _i5.Future<Map<String, _i7.Player>>.value(
              <String, _i7.Player>{},
            ),
          )
          as _i5.Future<Map<String, _i7.Player>>);

  @override
  _i5.Future<void> verifyEmail(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#verifyEmail, [token]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i8.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> saveUser(_i2.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#saveUser, [user]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.User?> getUser() =>
      (super.noSuchMethod(
            Invocation.method(#getUser, []),
            returnValue: _i5.Future<_i2.User?>.value(),
          )
          as _i5.Future<_i2.User?>);

  @override
  _i5.Future<void> saveToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#saveToken, [token]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String?> getToken() =>
      (super.noSuchMethod(
            Invocation.method(#getToken, []),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i5.Future<void> clearAuthData() =>
      (super.noSuchMethod(
            Invocation.method(#clearAuthData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> saveGames(List<_i3.Game>? games) =>
      (super.noSuchMethod(
            Invocation.method(#saveGames, [games]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.Game>> getGames() =>
      (super.noSuchMethod(
            Invocation.method(#getGames, []),
            returnValue: _i5.Future<List<_i3.Game>>.value(<_i3.Game>[]),
          )
          as _i5.Future<List<_i3.Game>>);

  @override
  _i5.Future<void> saveLocations(List<_i6.Location>? locations) =>
      (super.noSuchMethod(
            Invocation.method(#saveLocations, [locations]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i6.Location>> getLocations() =>
      (super.noSuchMethod(
            Invocation.method(#getLocations, []),
            returnValue: _i5.Future<List<_i6.Location>>.value(<_i6.Location>[]),
          )
          as _i5.Future<List<_i6.Location>>);

  @override
  _i5.Future<void> savePlayers(Map<String, _i7.Player>? players) =>
      (super.noSuchMethod(
            Invocation.method(#savePlayers, [players]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, _i7.Player>> getPlayers() =>
      (super.noSuchMethod(
            Invocation.method(#getPlayers, []),
            returnValue: _i5.Future<Map<String, _i7.Player>>.value(
              <String, _i7.Player>{},
            ),
          )
          as _i5.Future<Map<String, _i7.Player>>);

  @override
  _i5.Future<void> saveSelectedDate(DateTime? date) =>
      (super.noSuchMethod(
            Invocation.method(#saveSelectedDate, [date]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<DateTime?> getSelectedDate() =>
      (super.noSuchMethod(
            Invocation.method(#getSelectedDate, []),
            returnValue: _i5.Future<DateTime?>.value(),
          )
          as _i5.Future<DateTime?>);

  @override
  _i5.Future<void> saveSelectedLocationId(String? locationId) =>
      (super.noSuchMethod(
            Invocation.method(#saveSelectedLocationId, [locationId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String?> getSelectedLocationId() =>
      (super.noSuchMethod(
            Invocation.method(#getSelectedLocationId, []),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i5.Future<void> saveTheme(String? theme) =>
      (super.noSuchMethod(
            Invocation.method(#saveTheme, [theme]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String?> getTheme() =>
      (super.noSuchMethod(
            Invocation.method(#getTheme, []),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i5.Future<void> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
