// Mocks generated by Mockito 5.4.6 from annotations
// in picklematch/test/widgets/login_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter_bloc/flutter_bloc.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:picklematch/bloc/auth/auth_bloc.dart' as _i5;
import 'package:picklematch/bloc/auth/auth_event.dart' as _i7;
import 'package:picklematch/bloc/auth/auth_state.dart' as _i2;
import 'package:picklematch/models/game.dart' as _i4;
import 'package:picklematch/models/location.dart' as _i10;
import 'package:picklematch/models/player.dart' as _i11;
import 'package:picklematch/models/user.dart' as _i3;
import 'package:picklematch/services/api_service.dart' as _i9;
import 'package:picklematch/services/storage_service.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthState_0 extends _i1.SmartFake implements _i2.AuthState {
  _FakeAuthState_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGame_2 extends _i1.SmartFake implements _i4.Game {
  _FakeGame_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthBloc extends _i1.Mock implements _i5.AuthBloc {
  MockAuthBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeAuthState_0(this, Invocation.getter(#state)),
          )
          as _i2.AuthState);

  @override
  _i6.Stream<_i2.AuthState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i6.Stream<_i2.AuthState>.empty(),
          )
          as _i6.Stream<_i2.AuthState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  void add(_i7.AuthEvent? event) => super.noSuchMethod(
    Invocation.method(#add, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void onEvent(_i7.AuthEvent? event) => super.noSuchMethod(
    Invocation.method(#onEvent, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void emit(_i2.AuthState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void on<E extends _i7.AuthEvent>(
    _i8.EventHandler<E, _i2.AuthState>? handler, {
    _i8.EventTransformer<E>? transformer,
  }) => super.noSuchMethod(
    Invocation.method(#on, [handler], {#transformer: transformer}),
    returnValueForMissingStub: null,
  );

  @override
  void onTransition(_i8.Transition<_i7.AuthEvent, _i2.AuthState>? transition) =>
      super.noSuchMethod(
        Invocation.method(#onTransition, [transition]),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void onChange(_i8.Change<_i2.AuthState>? change) => super.noSuchMethod(
    Invocation.method(#onChange, [change]),
    returnValueForMissingStub: null,
  );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i9.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<_i3.User?> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i6.Stream<_i3.User?>.empty(),
          )
          as _i6.Stream<_i3.User?>);

  @override
  _i6.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i3.User> login(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#login, [email, password]),
            returnValue: _i6.Future<_i3.User>.value(
              _FakeUser_1(this, Invocation.method(#login, [email, password])),
            ),
          )
          as _i6.Future<_i3.User>);

  @override
  _i6.Future<void> logout(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#logout, [token]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i3.User> register(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#register, [email, password]),
            returnValue: _i6.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#register, [email, password]),
              ),
            ),
          )
          as _i6.Future<_i3.User>);

  @override
  _i6.Future<List<_i4.Game>> getGames(
    String? token, {
    String? date,
    String? locationId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getGames,
              [token],
              {#date: date, #locationId: locationId},
            ),
            returnValue: _i6.Future<List<_i4.Game>>.value(<_i4.Game>[]),
          )
          as _i6.Future<List<_i4.Game>>);

  @override
  _i6.Future<_i4.Game> createGame(String? token, _i4.Game? game) =>
      (super.noSuchMethod(
            Invocation.method(#createGame, [token, game]),
            returnValue: _i6.Future<_i4.Game>.value(
              _FakeGame_2(this, Invocation.method(#createGame, [token, game])),
            ),
          )
          as _i6.Future<_i4.Game>);

  @override
  _i6.Future<_i4.Game> updateGameResult(
    String? token,
    String? gameId,
    int? team1Score1,
    int? team1Score2,
    int? team2Score1,
    int? team2Score2,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateGameResult, [
              token,
              gameId,
              team1Score1,
              team1Score2,
              team2Score1,
              team2Score2,
            ]),
            returnValue: _i6.Future<_i4.Game>.value(
              _FakeGame_2(
                this,
                Invocation.method(#updateGameResult, [
                  token,
                  gameId,
                  team1Score1,
                  team1Score2,
                  team2Score1,
                  team2Score2,
                ]),
              ),
            ),
          )
          as _i6.Future<_i4.Game>);

  @override
  _i6.Future<_i4.Game> joinGame(String? token, String? gameId, String? team) =>
      (super.noSuchMethod(
            Invocation.method(#joinGame, [token, gameId, team]),
            returnValue: _i6.Future<_i4.Game>.value(
              _FakeGame_2(
                this,
                Invocation.method(#joinGame, [token, gameId, team]),
              ),
            ),
          )
          as _i6.Future<_i4.Game>);

  @override
  _i6.Future<void> deleteGame(String? token, String? gameId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGame, [token, gameId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i10.Location>> getLocations(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getLocations, [token]),
            returnValue: _i6.Future<List<_i10.Location>>.value(
              <_i10.Location>[],
            ),
          )
          as _i6.Future<List<_i10.Location>>);

  @override
  _i6.Future<Map<String, _i11.Player>> getPlayers(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getPlayers, [token]),
            returnValue: _i6.Future<Map<String, _i11.Player>>.value(
              <String, _i11.Player>{},
            ),
          )
          as _i6.Future<Map<String, _i11.Player>>);

  @override
  _i6.Future<void> verifyEmail(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#verifyEmail, [token]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i12.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> saveUser(_i3.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#saveUser, [user]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i3.User?> getUser() =>
      (super.noSuchMethod(
            Invocation.method(#getUser, []),
            returnValue: _i6.Future<_i3.User?>.value(),
          )
          as _i6.Future<_i3.User?>);

  @override
  _i6.Future<void> saveToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#saveToken, [token]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String?> getToken() =>
      (super.noSuchMethod(
            Invocation.method(#getToken, []),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<void> clearAuthData() =>
      (super.noSuchMethod(
            Invocation.method(#clearAuthData, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> saveGames(List<_i4.Game>? games) =>
      (super.noSuchMethod(
            Invocation.method(#saveGames, [games]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i4.Game>> getGames() =>
      (super.noSuchMethod(
            Invocation.method(#getGames, []),
            returnValue: _i6.Future<List<_i4.Game>>.value(<_i4.Game>[]),
          )
          as _i6.Future<List<_i4.Game>>);

  @override
  _i6.Future<void> saveLocations(List<_i10.Location>? locations) =>
      (super.noSuchMethod(
            Invocation.method(#saveLocations, [locations]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i10.Location>> getLocations() =>
      (super.noSuchMethod(
            Invocation.method(#getLocations, []),
            returnValue: _i6.Future<List<_i10.Location>>.value(
              <_i10.Location>[],
            ),
          )
          as _i6.Future<List<_i10.Location>>);

  @override
  _i6.Future<void> savePlayers(Map<String, _i11.Player>? players) =>
      (super.noSuchMethod(
            Invocation.method(#savePlayers, [players]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<Map<String, _i11.Player>> getPlayers() =>
      (super.noSuchMethod(
            Invocation.method(#getPlayers, []),
            returnValue: _i6.Future<Map<String, _i11.Player>>.value(
              <String, _i11.Player>{},
            ),
          )
          as _i6.Future<Map<String, _i11.Player>>);

  @override
  _i6.Future<void> saveSelectedDate(DateTime? date) =>
      (super.noSuchMethod(
            Invocation.method(#saveSelectedDate, [date]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<DateTime?> getSelectedDate() =>
      (super.noSuchMethod(
            Invocation.method(#getSelectedDate, []),
            returnValue: _i6.Future<DateTime?>.value(),
          )
          as _i6.Future<DateTime?>);

  @override
  _i6.Future<void> saveSelectedLocationId(String? locationId) =>
      (super.noSuchMethod(
            Invocation.method(#saveSelectedLocationId, [locationId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String?> getSelectedLocationId() =>
      (super.noSuchMethod(
            Invocation.method(#getSelectedLocationId, []),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<void> saveTheme(String? theme) =>
      (super.noSuchMethod(
            Invocation.method(#saveTheme, [theme]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String?> getTheme() =>
      (super.noSuchMethod(
            Invocation.method(#getTheme, []),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<void> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}
